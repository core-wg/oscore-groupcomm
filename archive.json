{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2021-08-01T00:51:29.885328+00:00",
  "repo": "core-wg/oscore-groupcomm",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "MDU6SXNzdWUzNjYyNzYzMTk=",
      "title": "Move signature to Payload",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/2",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Move signature to Payload\r\n\r\nHaving the signature in the option is bad for two reasons: I makes fragmentation far worse, and it means that the recipient need to look up the signature length, just to parse the OSCORE option. For these reasons the signature belongs in the payload.\r\n\r\nI just made a Pull request for this. The pull request also update the compression section to align with draft-ietf-core-object-security-15. Someone should probably go through the draft and align it with draft-ietf-core-object-security-15",
      "createdAt": "2018-10-03T10:41:47Z",
      "updatedAt": "2018-10-12T14:32:19Z",
      "closedAt": "2018-10-12T14:32:19Z",
      "comments": []
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWU0MTEzNjQ0NjI=",
      "title": "Deterministic ECDSA",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/4",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "If ECDSA is used, Group OSCORE should probably recommend the deterministic ECDSA as is done in EDHOC and TLS 1.3:\r\n\r\n\"If ECDSA is supported, \"deterministic ECDSA\" as specified in RFC6979 is RECOMMENDED.\"",
      "createdAt": "2019-02-18T08:54:11Z",
      "updatedAt": "2019-03-08T09:34:55Z",
      "closedAt": "2019-03-08T09:34:55Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWU0MjI3MzI4OTM=",
      "title": "kid parameter",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/6",
      "state": "CLOSED",
      "author": "petervanderstok",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "in section 3.2 it is unclear what the 'unprotected' field of the message is.\r\nProbably the oscore option is meant. If yes, mark as such. This is confusing.\r\n\r\nin section 3.1 the aad array is composed of request_kid and request_piv. It is idifficult to guess why the request_ prefix is added to kid and piv. Why not request_ oscore_version request_algorithms and request_options to be consistent? Or remove request_ everywhere.\r\n\r\nTh same issue is marked for oscore",
      "createdAt": "2019-03-19T13:30:20Z",
      "updatedAt": "2019-07-04T20:39:27Z",
      "closedAt": "2019-07-04T20:39:27Z",
      "comments": []
    },
    {
      "number": 7,
      "id": "MDU6SXNzdWU0MjM5NDE3NDU=",
      "title": "Choice of signature Algorithm(s)",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/7",
      "state": "OPEN",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I think we need some more discussion of which signature algorithms to use. Candidates would be:\r\n\r\nAlgorithm                 Signature size    Security level\r\nECDSA secp224r1 (P-224)   56 bytes          112\r\nECDSA secp256r1 (P-256)   64 bytes          128\r\nECDSA secp256k1           64 bytes          128\r\nEd25519                   64 bytes          128\r\n\r\nThe CFRG review of EDHOC brought up the qeustion if not P-224 would be a better choice if the main goal is to get smaller messages. ECDSA with P-224 has the obvious advantage of having signatures that are 8 bytes shorter.\r\n\r\n112-bit security is according to NIST ok to use until 2030.\r\n\r\nECDSA wih P-224 is significantly faster than ECDSA with P-256, around 2/3 the number of operations/time. secp256k1 is around 300 % faster than secp256r1. Harder to find comparisions with Ed25519. Most of the speed will depend on the curve, but EdDSA (Schnorr) also have other advantages that speed up signing compared to ECDSA. Ed25519 verify is likely at least as fast as ECDSA with P-224 on all platforms and significantly faster for signing on all platforms. On some platforms I think Ed25519 is significantly faster also for verification.\r\n\r\nIn terms of number of implementation, I think ECDSA with P-256 in is the lead, with ECDSA P-224 as second, and Ed25519 in last place.\r\n\r\nI am leaning towards that P-224 should probably be supported (then ES224 need to be standardized in COSE). The other three are already registered for COSE. The harder question is which should be MTI. Several people have stated that latency is of uthermost importance, in case the current choice of Ed25519 as MTI is likely the correct choice.\r\n\r\nA good but a little bit dated comparision of different algorithms on ARM processors:\r\nhttps://datatracker.ietf.org/meeting/92/materials/slides-92-lwig-3\r\n\r\nThe choice also depends on if there are fast implementations available. Assembly optimized version of the NIST curves is likely as fast or faster than a curve25519 implementation written in C.\r\n\r\nhttps://github.com/kmackay/micro-ecc has very fast implementations (for ARM) of ECDH and ECDSA with secp160r1, secp192r1, secp224r1, secp256r1, and secp256k1. I cannot find anything similar for EdDSA.\r\n",
      "createdAt": "2019-03-21T21:06:00Z",
      "updatedAt": "2019-03-21T21:06:00Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWU0MjQxNTc3NDM=",
      "title": "Gateway applications with Group OSCORE ",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/8",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This use cases seem to have been forgotten. It is not mentioned in the Group OSCORE document, and I do not think there was any discussion ending in that the use case should not be supported.\r\n\r\nUse case description from Jim Schaad:\r\n\r\n> \r\n> I have a room full of light bulbs and switches which constitute a multicast group.  For various reasons these devices do not both doing any signature checking.  There are some additional controllers that live outside of the subnet which consists of the room which need to be able to control the devices and query the state of various devices in the that subsystem.  \r\n>     \r\n> There lives a firewall/gateway on the border between the subsystem and the entire network that wants to prevent unauthenticated commands coming in from the outside or information which is not authenticated leaking out from the inside.  The first way to do this is to make the firewall/gateway be a traffic re-writing system.  That means that it will receive commands from the outside, authenticate them, translate them to a command the will work inside of the room and sends it.  It will then deal with the responses and translate them back to a format that the original device would understand and authenticate.\r\n>     \r\n> The second way is to say that the firewall/gateway is not a trusted party to this situation.  However, there is a desire to drastically cut down the attack space that is coming from the outside world into the room.  In this case when the gateway receives a request, it validates the signature on the group message and ensures that it is signed by a member of the group.  It does this by checking the counter signature on the message, but does not try and decrypt the message.  At that point it lets the message into the room where it will be acted on by the local devices.  It would also be possible that the responses would be signed by the firewall/gateway rather than each individual device providing a signature.  \r\n>     \r\n>  For the second method, any data which is not determinable by the firewall without being a member of the group with the exception of the signing key, is going to be a problem as the signature cannot validated.  ",
      "createdAt": "2019-03-22T11:11:03Z",
      "updatedAt": "2019-07-04T20:41:13Z",
      "closedAt": "2019-07-04T20:41:13Z",
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "I think both of these use cases are interesting and definitely worth discussing. The first use case seems quite straightforward to achieve and likely worth making sure it works with Group OSCORE. The firewall still need to be able to fetch information from somewhere, but does not need to be trusted. The second use case is more complicated as the firewall need to be semi-trusted, and there the construction also changes the meaning of the Sender ID as it is now the firewall that has signed rather than the original sender.\r\n",
          "createdAt": "2019-03-22T11:11:38Z",
          "updatedAt": "2019-03-22T11:11:38Z"
        },
        {
          "author": "fpalombini",
          "authorAssociation": "COLLABORATOR",
          "body": "John I think you reversed first and second use case in your second comment, correct? \r\n\r\nI think the second case (where the gateway only verifies the signatures) is a very valid use case of group OSCORE and should be described (possibly in appendix). The first case, on the contrary, is not necessarily a group OSCORE case. There could be a group OSCORE between the gateway and the firewall/gateway, but that is not fundamental to the scenario: here the middle node is trusted on one side by the external controller, on the other side by the multicast group. He could be considered the endpoint for those communications.\r\n\r\nSo I suggest we only describe the second case.",
          "createdAt": "2019-03-23T17:00:27Z",
          "updatedAt": "2019-03-23T17:00:27Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWU0NzA3ODQ1MTU=",
      "title": "explicitely define error message",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/10",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "for when signature verification fails on server. Should be 4.00.\r\n\r\n(Section 6. Note that it is not RECOMMENDED to send error messages back).",
      "createdAt": "2019-07-21T13:57:15Z",
      "updatedAt": "2019-08-30T16:28:58Z",
      "closedAt": "2019-08-30T16:28:58Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWU0NzA3ODYwODU=",
      "title": "make the dynamic sec ctx derivation optional",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/11",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "and application dependent",
      "createdAt": "2019-07-21T14:13:15Z",
      "updatedAt": "2019-08-30T16:29:01Z",
      "closedAt": "2019-08-30T16:29:01Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWU0OTM3NzkwMjc=",
      "title": "Recude the size of responses with 64 bytes",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/13",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "In Group OSCORE with ECDSA and EdDSA signatures, I think the overhead of responses can be cut with a whopping 64 bytes (for 256 bit curves), by removing the signature and calculating the AEAD with an ephemeral-static ECHD key instead of the server's sender key. An ECDSA signature is (r, s) where r = g^x can be seen as an ephemeral Diffie-Hellman public key. \r\n\r\nCurrent specification:\r\n```\r\nClient\t\t\t\t\tServer\r\n----------------------------------------------\r\nSender Key\t\t\t\tReceiver Key\r\nReciever Key\t\t\t\tSender Key\r\nPrivate Sig Key\t\t\t\tPublic Sig Key\r\nPublic Sig Key\t\t\t\tPrivate Sig Key\r\n\r\n--------------->\r\nAEAD( client sender key, ... ), (r1 = g^x, s1)\r\n<---------------\r\nAEAD( server sender key, ... ), (r2 = g^y, s2)\r\n```\r\n\r\n\r\nOptimized solution to reduce message size of repsonses:\r\n```\r\nClient\t\t\t\t\tServer\r\n----------------------------------------------\r\nSender Key\t\t\t\tReceiver Key\r\nPrivate Sig Key\t\t\t\tPublic Sig Key\r\nPublic DH Key (g^v)\t\t\tPrivate SH Key (v)\r\n\r\n--------------->\r\nAEAD( client sender key, ... ), (r1 = g^x, s1)\r\n<---------------\r\nAEAD( g^xv, ... )\r\n\r\n\r\n```\r\nPros:\r\n\r\n- \tCuts a whopping 64 bytes from responses\r\n- \tg^xv can be calculated while waiting for the repsonse\r\n- \tIn deployments with fixed roles the number of asymmetric keys stay the same\t\r\n\r\nCons:\r\n\r\n- \tIn mesh networks the number of asymmetric keys doubles\r\n- \tSignature checking intermediaries is not supported.\r\n\r\nThis idea seems to work for both ECDSA, deterministic ECDSA and EdDSA. For deterministic algorithms it works as the signed message is never the same due to the inclusion of a sequence number. In the case of EdDSA the client and server has to transform the point in Edwards form to Montgomery form to use the standardized X25519.\r\n\r\n(This comment was updated with information on EdDSA and deterministic signatures after suggestions from Erik Thormarker).",
      "createdAt": "2019-09-15T19:55:17Z",
      "updatedAt": "2020-02-06T15:26:08Z",
      "closedAt": "2020-02-06T15:26:08Z",
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "The amount of reduction depends on the number of nodes in the system:\r\n\r\n- 2 nodes   41% reduction in OSCORE overhead (number of bytes)\r\n- 10 nodes  75% reduction in OSCORE overhead (number of bytes)\r\n- 100 nodes 82% reduction in OSCORE overhead (number of bytes)\r\n\r\nSuch a significant reduction would be very lucrative, especially in mesh networks where the number of key in symmetric solutions grow as n^2. Group OSCORE could e.g. specify two different modes, one that support signature verifying middle-boxes and one modes that does not.\r\n",
          "createdAt": "2019-09-16T07:12:01Z",
          "updatedAt": "2019-09-17T06:18:20Z"
        },
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Now covered by the optimized mode.",
          "createdAt": "2020-02-06T15:26:08Z",
          "updatedAt": "2020-02-06T15:26:08Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWU1MjM4NDY5ODU=",
      "title": "Clarify key id in which messages",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/14",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "by @jimsch:\r\n\r\nIn working through all of the roll over cases I am dealing with, I have a\r\nquestion.  The key identifier is a required field in all response messages.\r\nIs the group identifier a required field in all response messages or is it\r\nonly required under certain circumstances?  The circumstances would be if\r\nthe key context is not the same as the (original?) request.  Not too sure\r\nwhat the answer is going to be if you are looking at a sequence of observe\r\nresponses where you would really like to stop sending the group identifier\r\nif it is not needed any more.",
      "createdAt": "2019-11-16T13:44:57Z",
      "updatedAt": "2019-12-27T16:36:18Z",
      "closedAt": "2019-12-27T16:36:18Z",
      "comments": []
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWU1MjM4NDcwMDc=",
      "title": "keeping old context",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/15",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\nIn section 8.4 it might be useful to distinguish between two different\r\ninstances of the first case.\r\n\r\nThere is a difference between a server which receives a message using an old\r\ncontext, which it makes more sense to ignore and a client receiving a\r\nresponse from a server that is using the same context as the request was\r\nsent in.  It makes more sense to hang onto the context in the second case\r\nthan in the first case.  There is also a question of should the server\r\nrespond in a different context than the response was in.  That point also\r\nshould be clarified.\r\n",
      "createdAt": "2019-11-16T13:45:14Z",
      "updatedAt": "2019-12-27T14:12:13Z",
      "closedAt": "2019-12-27T14:12:13Z",
      "comments": []
    },
    {
      "number": 16,
      "id": "MDU6SXNzdWU1MjM4NDcwODQ=",
      "title": "DTLS hop by hop",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/16",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\n*  Section 1 - In the last paragraph you might want to mention that using\r\nDTLS for doing hop-by-hop protection protects the routing information of the\r\npacket from observers.",
      "createdAt": "2019-11-16T13:46:03Z",
      "updatedAt": "2019-12-27T13:30:21Z",
      "closedAt": "2019-12-27T13:30:21Z",
      "comments": []
    },
    {
      "number": 17,
      "id": "MDU6SXNzdWU1MjM4NDcxMTY=",
      "title": "master salt",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/17",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\n* Section 2.1 - If I don't distribute a master salt - does that mean the old\r\nvalue is absent or kept?   Working is a little bit ambiguous.",
      "createdAt": "2019-11-16T13:46:22Z",
      "updatedAt": "2019-12-27T13:30:30Z",
      "closedAt": "2019-12-27T13:30:30Z",
      "comments": []
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWU1MjM4NDcyMDM=",
      "title": "key roll over in section 2.1",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/18",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "by @jimsch:\r\n\r\n* Section 2.1 - I am wondering if this section should contain some\r\ninformation about how a client/server should handle key material in the\r\nevent of a roll over.  ",
      "createdAt": "2019-11-16T13:47:10Z",
      "updatedAt": "2019-12-27T13:30:36Z",
      "closedAt": "2019-12-27T13:30:36Z",
      "comments": []
    },
    {
      "number": 19,
      "id": "MDU6SXNzdWU1MjM4NDczMzg=",
      "title": "messages including Partial IV or all messages",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/19",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "by @jimsch:\r\n\r\n* Section 2.2 - remove /including a Partial IV/ from the second paragraph.\r\nA better answer would be /for that group/",
      "createdAt": "2019-11-16T13:48:24Z",
      "updatedAt": "2019-12-27T13:30:45Z",
      "closedAt": "2019-12-27T13:30:45Z",
      "comments": []
    },
    {
      "number": 20,
      "id": "MDU6SXNzdWU1MjM4NDczNzc=",
      "title": "Editorial",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/20",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\n* Section 3.1 - s/is extended as follows/is built differently./  From the\r\ncurrent sentence, I expected the as follows to be in the next sentence.",
      "createdAt": "2019-11-16T13:48:46Z",
      "updatedAt": "2019-12-27T13:30:54Z",
      "closedAt": "2019-12-27T13:30:54Z",
      "comments": []
    },
    {
      "number": 21,
      "id": "MDU6SXNzdWU1MjM4NDc0NDg=",
      "title": "CDDL does not match definition",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/21",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\n* Section 3.1.1 - The MAY include does not appear to match the CDDL\r\nstructure below - which is correct?",
      "createdAt": "2019-11-16T13:49:31Z",
      "updatedAt": "2019-12-27T13:31:03Z",
      "closedAt": "2019-12-27T13:31:03Z",
      "comments": []
    },
    {
      "number": 22,
      "id": "MDU6SXNzdWU1MjM4NDc1MDY=",
      "title": "kid context",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/22",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\n* Section 3.X - Should there be something about the use of the 'kid context'\r\nparameter as a part of this section?",
      "createdAt": "2019-11-16T13:50:04Z",
      "updatedAt": "2019-12-27T13:32:39Z",
      "closedAt": "2019-12-27T13:32:39Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with commit https://github.com/core-wg/oscore-groupcomm/commit/654e49f6492c22535ce35afdce856311ab324379",
          "createdAt": "2019-12-27T13:32:38Z",
          "updatedAt": "2019-12-27T13:32:38Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWU1MjM4NDc1NjQ=",
      "title": "Editorial",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/23",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @Jimsch:\r\n\r\n* Section 4.1 - You need to define 's' someplace and also, what is the bit\r\nfor it?   This means that you need to redefined the kid context definition\r\nbetter or just refer to the definition in RFC 8613 since you are no longer\r\ndoing anything new from that document.   Not restating leads to fewer\r\nerrors.",
      "createdAt": "2019-11-16T13:50:36Z",
      "updatedAt": "2019-12-27T13:32:46Z",
      "closedAt": "2019-12-27T13:32:46Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with commit https://github.com/core-wg/oscore-groupcomm/commit/654e49f6492c22535ce35afdce856311ab324379",
          "createdAt": "2019-12-27T13:32:46Z",
          "updatedAt": "2019-12-27T13:32:46Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU1MjM4NDc2MDI=",
      "title": "Editorial",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/24",
      "state": "CLOSED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "By @jimsch:\r\n\r\n* Appendix A - I think there may be a problem with the term \"member of a\r\ngroup\" between this document and draft-dijk-core-groupcomm.  This document\r\nincludes all clients, while that document only incudes the servers.  This\r\nmay cause future problems.\r\n",
      "createdAt": "2019-11-16T13:51:03Z",
      "updatedAt": "2019-12-27T13:31:14Z",
      "closedAt": "2019-12-27T13:31:14Z",
      "comments": []
    },
    {
      "number": 26,
      "id": "MDU6SXNzdWU1Njg4NjgwMzI=",
      "title": "Echo recovery in multicast cases",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/26",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "As I understand the current master, replay window recovery should work like this:\r\n\r\n* A single server reboots\r\n* Client sends request\r\n* Most servers accept it\r\n* A single server says \"4.01 Echo: blah\"\r\n* Client sends the same request again to that particular server. It's unicast on the network, uses the same group security context as the original request but has an Echo: blah option and obviously a new sender sequence number.\r\n\r\nThis triggers the very concerns of ssec-unicast-requests -- someone might send that message to other servers.\r\n\r\n(Admittedly that's not a concern for safe requests -- but then again, if it were a safe request, as a server, I'd be tempted to respond successfully right away).",
      "createdAt": "2020-02-21T10:26:02Z",
      "updatedAt": "2020-04-30T15:42:22Z",
      "closedAt": "2020-04-30T15:42:22Z",
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this still a concern with pairwise request? (See latest github.)",
          "createdAt": "2020-02-21T11:05:39Z",
          "updatedAt": "2020-02-21T11:05:39Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "I think that pairwise would mitigate this, but that means that pairwise becomes mandatory for challenge-response synchronization.\r\n\r\nIf that is a restriction that is inacceptable (don't know how big a part of group OSCORE pairwise will be), there might be a variation on ssec-synch-challenge-response that can do without: A server, rather than protected 4.01+Echo, might answer unprotected 5.03 (or not at all if multicast), and send an arbitrary request (I'd send GET / Block2:0:0:0 but it really doesn't matter) to the client (or even the whole group of clients if it just comes up and wants to do that eagerly). If that is responded to with an own sequence number (which'll be the case in groupcomm -- on original OSCORE we couldn't enforce that), that is known fresh to the original server, and it can initialize its replay window. This depends on the availability of role reversal and the absence of proxies, so I'd only flesh this out if it solves a real problem.",
          "createdAt": "2020-02-21T11:49:04Z",
          "updatedAt": "2020-02-21T11:49:04Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "COLLABORATOR",
          "body": "Just on pairwise: For the algorithms that are expected to be used, the same public key can be used for both signature and pairwise DH. Therefore the only practical limitation of using pairwise seems to be the inability for intermediary nodes to verify responses, since there is no signature. I think verifying signature makes more sense in multicast requests than in unicast responses, so I think this limitation is acceptable. Why not mandate or at least recommend the use of pairwise DH for responses, and mandate it for challenge-response synchronization?\r\n\r\n",
          "createdAt": "2020-02-21T12:38:55Z",
          "updatedAt": "2020-02-21T12:38:55Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "> Why not mandate or at least recommend the use of pairwise DH for responses, and mandate it for challenge-response synchronization?\r\n\r\nIf I understand that right that'd be a quite impactful change on group OSCORE, that's probably better tracked in a separate thread / issue.\r\n\r\nFor the purpose of receive window recovery, using pairwise is probably good enough to close this issue with some text; from looking in a bit deeper, the cost of calculating the pairwise key appears to be in the same order of magnitude as processing a signed response -- and if pairwise is to become even more widespread, it'll just be less impact to code size for echo recovery.",
          "createdAt": "2020-03-03T13:46:18Z",
          "updatedAt": "2020-03-03T13:46:18Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "MDU6SXNzdWU2MDA4OTQ2ODI=",
      "title": "Section 3 - Discarding pairwise keys after rekeying",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/29",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:38:22Z",
      "updatedAt": "2020-04-22T08:37:40Z",
      "closedAt": "2020-04-22T08:37:40Z",
      "comments": []
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWU2MDA4OTU1ODQ=",
      "title": "Non-resetting of SN after rekeying by default",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/30",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:39:42Z",
      "updatedAt": "2020-04-22T15:09:12Z",
      "closedAt": "2020-04-22T15:09:12Z",
      "comments": []
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWU2MDA4OTU4ODE=",
      "title": "Optimized request as an appendix",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/31",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:40:07Z",
      "updatedAt": "2020-04-23T08:30:58Z",
      "closedAt": "2020-04-23T08:30:58Z",
      "comments": []
    },
    {
      "number": 32,
      "id": "MDU6SXNzdWU2MDA4OTYwODQ=",
      "title": "Pairwise mode to the document body",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/32",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:40:23Z",
      "updatedAt": "2020-04-23T08:31:02Z",
      "closedAt": "2020-04-23T08:31:02Z",
      "comments": []
    },
    {
      "number": 33,
      "id": "MDU6SXNzdWU2MDA4OTY0MjE=",
      "title": "Normative support of different modes",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/33",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:40:54Z",
      "updatedAt": "2020-04-23T08:31:06Z",
      "closedAt": "2020-04-23T08:31:06Z",
      "comments": []
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWU2MDA4OTY4NzI=",
      "title": "Discuss pairwise mode in non-multicast settings",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/34",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:41:35Z",
      "updatedAt": "2020-04-24T15:01:22Z",
      "closedAt": "2020-04-24T15:01:22Z",
      "comments": []
    },
    {
      "number": 35,
      "id": "MDU6SXNzdWU2MDA4OTcxOTQ=",
      "title": "Group policy signaling support for pairwise mode",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/35",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:42:05Z",
      "updatedAt": "2020-04-23T14:28:42Z",
      "closedAt": "2020-04-23T14:28:42Z",
      "comments": []
    },
    {
      "number": 36,
      "id": "MDU6SXNzdWU2MDA4OTc0Mjc=",
      "title": "Flip the value meaning of the pairwise flag bit",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/36",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:42:25Z",
      "updatedAt": "2020-04-23T10:18:33Z",
      "closedAt": "2020-04-23T10:18:33Z",
      "comments": []
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWU2MDA4OTc3MTU=",
      "title": "Error handling when not supporting the pairwise mode",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/37",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:42:52Z",
      "updatedAt": "2020-04-23T10:18:36Z",
      "closedAt": "2020-04-23T10:18:36Z",
      "comments": []
    },
    {
      "number": 38,
      "id": "MDU6SXNzdWU2MDA4OTg0MTQ=",
      "title": "The pairwise mode is not for silent-server-only nodes",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/38",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:43:52Z",
      "updatedAt": "2020-04-23T14:16:42Z",
      "closedAt": "2020-04-23T14:16:42Z",
      "comments": []
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWU2MDA4OTg5MTc=",
      "title": "IANA registries from COSE bis for signature algorithms/parameters",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/39",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:44:36Z",
      "updatedAt": "2020-06-23T07:44:55Z",
      "closedAt": "2020-06-23T07:44:55Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWU2MDA4OTkxNzc=",
      "title": "Considerations on post-rebooting",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/40",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:44:57Z",
      "updatedAt": "2020-05-02T15:00:07Z",
      "closedAt": "2020-05-02T15:00:07Z",
      "comments": []
    },
    {
      "number": 41,
      "id": "MDU6SXNzdWU2MDA4OTk1OTQ=",
      "title": "Section 3.2 - Reasons leading to fast SN growing",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/41",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:45:33Z",
      "updatedAt": "2020-04-22T14:27:09Z",
      "closedAt": "2020-04-22T14:27:09Z",
      "comments": []
    },
    {
      "number": 42,
      "id": "MDU6SXNzdWU2MDA5MDAxODE=",
      "title": "Section 10.4 - Not use reflection PIV across rekeying",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/42",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:46:21Z",
      "updatedAt": "2020-04-22T14:05:22Z",
      "closedAt": "2020-04-22T14:05:22Z",
      "comments": []
    },
    {
      "number": 43,
      "id": "MDU6SXNzdWU2MDA5MDA0NTA=",
      "title": "Appendix E.1 - Improve readability",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/43",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:46:43Z",
      "updatedAt": "2020-04-22T13:13:43Z",
      "closedAt": "2020-04-22T13:13:43Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/a4c76ea7900b87b9d13f94bfdba74984efd02618",
          "createdAt": "2020-04-22T13:13:43Z",
          "updatedAt": "2020-04-22T13:13:43Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "MDU6SXNzdWU2MDA5MDA4MTA=",
      "title": "Appendix E.1/E.2 - Relax usage of reflected PIV",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/44",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:47:12Z",
      "updatedAt": "2020-04-22T11:07:06Z",
      "closedAt": "2020-04-22T11:07:06Z",
      "comments": []
    },
    {
      "number": 45,
      "id": "MDU6SXNzdWU2MDA5MDExMTk=",
      "title": "Appendix E.2 - The server may discard the first request",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/45",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:47:40Z",
      "updatedAt": "2020-04-22T10:58:37Z",
      "closedAt": "2020-04-22T10:58:37Z",
      "comments": []
    },
    {
      "number": 46,
      "id": "MDU6SXNzdWU2MDA5MDEzNDU=",
      "title": "Appendix E.3 - 4.01 responses are protected",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/46",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:47:59Z",
      "updatedAt": "2020-04-22T10:41:45Z",
      "closedAt": "2020-04-22T10:41:45Z",
      "comments": []
    },
    {
      "number": 47,
      "id": "MDU6SXNzdWU2MDA5MDE2NTM=",
      "title": "Appendix E.3 - Echo sync following a \"large enough gap\"",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/47",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:48:27Z",
      "updatedAt": "2020-04-22T10:30:49Z",
      "closedAt": "2020-04-22T10:30:49Z",
      "comments": []
    },
    {
      "number": 48,
      "id": "MDU6SXNzdWU2MDA5MDE5ODE=",
      "title": "Appendix E.3 - Storing the Echo option with <gid, kid>",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/48",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:48:56Z",
      "updatedAt": "2020-04-22T09:48:48Z",
      "closedAt": "2020-04-22T09:48:48Z",
      "comments": []
    },
    {
      "number": 49,
      "id": "MDU6SXNzdWU2MDA5MDIyMzA=",
      "title": "Appendix E.3 - Echo option not in multicast messages",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/49",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-16T09:49:21Z",
      "updatedAt": "2020-04-22T08:49:03Z",
      "closedAt": "2020-04-22T08:49:03Z",
      "comments": []
    },
    {
      "number": 53,
      "id": "MDU6SXNzdWU3NDk1MTM3MjQ=",
      "title": "Decouple growth of SSNs and loss of synch",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/53",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:01:05Z",
      "updatedAt": "2020-11-24T16:50:03Z",
      "closedAt": "2020-11-24T16:50:03Z",
      "comments": []
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWU3NDk1MTM5NzM=",
      "title": "Clearer cause-effect about reset of SSN",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/54",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:01:22Z",
      "updatedAt": "2020-11-24T16:30:40Z",
      "closedAt": "2020-11-24T16:30:40Z",
      "comments": []
    },
    {
      "number": 55,
      "id": "MDU6SXNzdWU3NDk1MTQwODk=",
      "title": "Preservation of Sender IDs over rekeying",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/55",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:01:31Z",
      "updatedAt": "2020-11-24T16:24:38Z",
      "closedAt": "2020-11-24T16:24:38Z",
      "comments": []
    },
    {
      "number": 56,
      "id": "MDU6SXNzdWU3NDk1MTQyMzY=",
      "title": "Inclusion of 'kid' in messages",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/56",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:01:41Z",
      "updatedAt": "2020-11-24T15:26:22Z",
      "closedAt": "2020-11-24T15:26:22Z",
      "comments": []
    },
    {
      "number": 57,
      "id": "MDU6SXNzdWU3NDk1MTQzMjM=",
      "title": "external_aad , remove 'par_countersign_key'",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/57",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:01:48Z",
      "updatedAt": "2020-12-01T10:19:09Z",
      "closedAt": "2020-12-01T10:19:09Z",
      "comments": []
    },
    {
      "number": 58,
      "id": "MDU6SXNzdWU3NDk1MTQ0MjA=",
      "title": "external_aad , provide general template",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/58",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:01:57Z",
      "updatedAt": "2020-12-01T13:42:09Z",
      "closedAt": "2020-12-01T13:42:09Z",
      "comments": []
    },
    {
      "number": 59,
      "id": "MDU6SXNzdWU3NDk1MTQ1NDk=",
      "title": "external_aad , explain usage of 'request_kid_context'",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/59",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:06Z",
      "updatedAt": "2020-12-01T09:45:24Z",
      "closedAt": "2020-12-01T09:45:24Z",
      "comments": []
    },
    {
      "number": 60,
      "id": "MDU6SXNzdWU3NDk1MTQ2Mzg=",
      "title": "single external_aad structure",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/60",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:12Z",
      "updatedAt": "2020-12-12T16:44:27Z",
      "closedAt": "2020-12-12T16:44:27Z",
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "COLLABORATOR",
          "body": "I support this. The reason for having multiple external_aad for groupcomm was that one of them coincided with OSCORE. This is no longer the case. Moreover the differences between the two external_aad currently in the draft is small.",
          "createdAt": "2020-12-10T08:07:10Z",
          "updatedAt": "2020-12-10T08:07:10Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "MDU6SXNzdWU3NDk1MTQ3Mzk=",
      "title": "external_aad , explain usage of 'OSCORE_option'",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/61",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:20Z",
      "updatedAt": "2020-12-01T10:04:07Z",
      "closedAt": "2020-12-01T10:04:07Z",
      "comments": []
    },
    {
      "number": 62,
      "id": "MDU6SXNzdWU3NDk1MTQ4MzM=",
      "title": "Signature value in examples",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/62",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:26Z",
      "updatedAt": "2020-11-24T13:07:21Z",
      "closedAt": "2020-11-24T13:07:21Z",
      "comments": []
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU3NDk1MTQ5NDM=",
      "title": "Processing and description of the flag bit",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/63",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:35Z",
      "updatedAt": "2020-11-25T10:27:32Z",
      "closedAt": "2020-11-25T10:27:32Z",
      "comments": []
    },
    {
      "number": 64,
      "id": "MDU6SXNzdWU3NDk1MTUwMzU=",
      "title": "Gid in responses after rekeying",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/64",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:42Z",
      "updatedAt": "2020-11-24T15:46:53Z",
      "closedAt": "2020-11-24T15:46:53Z",
      "comments": []
    },
    {
      "number": 65,
      "id": "MDU6SXNzdWU3NDk1MTUxMzY=",
      "title": "Pairwise mode for multicast requests",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/65",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:49Z",
      "updatedAt": "2020-11-24T16:02:59Z",
      "closedAt": "2020-11-24T16:02:59Z",
      "comments": []
    },
    {
      "number": 66,
      "id": "MDU6SXNzdWU3NDk1MTUyNTQ=",
      "title": "More background in replay protection sec con",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/66",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:02:58Z",
      "updatedAt": "2020-11-24T17:02:13Z",
      "closedAt": "2020-11-24T17:02:13Z",
      "comments": []
    },
    {
      "number": 67,
      "id": "MDU6SXNzdWU3NDk1MTUzMzU=",
      "title": "Diagram on possible KID reassigning",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/67",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:03:05Z",
      "updatedAt": "2020-12-01T09:38:24Z",
      "closedAt": "2020-12-01T09:38:23Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/e13bdfb04cf9b9c5a2a2a1b1ca33950536847373",
          "createdAt": "2020-12-01T09:38:23Z",
          "updatedAt": "2020-12-01T09:38:23Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "MDU6SXNzdWU3NDk1MTU0MjU=",
      "title": "Overflow and loss of Recipient Contexts",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/68",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:03:11Z",
      "updatedAt": "2020-11-25T18:15:44Z",
      "closedAt": "2020-11-25T18:15:44Z",
      "comments": []
    },
    {
      "number": 69,
      "id": "MDU6SXNzdWU3NDk1MTU1MTc=",
      "title": "Distinction between anti-replay and freshness",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/69",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:03:20Z",
      "updatedAt": "2020-11-27T19:22:00Z",
      "closedAt": "2020-11-27T19:22:00Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Changes affect the following Sections:\r\n- 2.2\r\n- 2.4\r\n- 2.4.1\r\n- 2.4.1.1 and 2.4.1.2\r\n- 6.1 and 6.2\r\n- 10.10 and 10.11\r\n- Appendix E (was E.3)",
          "createdAt": "2020-11-27T19:22:00Z",
          "updatedAt": "2020-11-27T19:22:00Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "MDU6SXNzdWU3NDk1MTU2MjY=",
      "title": "Clarifications on synchronization with using Echo",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/70",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:03:28Z",
      "updatedAt": "2020-11-24T10:24:44Z",
      "closedAt": "2020-11-24T10:24:44Z",
      "comments": []
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWU3NDk1MzEzODY=",
      "title": "The GM provide public keys with associated KIDs",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/71",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-24T09:25:19Z",
      "updatedAt": "2020-11-24T10:52:52Z",
      "closedAt": "2020-11-24T10:52:52Z",
      "comments": []
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWU3Njg4MjQzNzQ=",
      "title": "Convenience and security of one key pair for Diffie-Hellman and signing",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/72",
      "state": "OPEN",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Elaborate on the convenience together with the security [DeGabriele] of using the same key pair for Diffie-Hellman (in pairwise mode) and for signing (in group mode). This can extend the text in Section 10.13 \"Cryptographic Considerations\".\r\n\r\n\r\n[DeGabriele] Degabriele, J., Lehmann, A., Paterson, K., Smart, N., and M. Strefler, \"On the Joint Security of Encryption and Signature in EMV\", December 2011. https://eprint.iacr.org/2011/615",
      "createdAt": "2020-12-16T12:43:25Z",
      "updatedAt": "2021-05-09T09:50:40Z",
      "closedAt": null,
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/1fe710c720aab07b50af876d17e9fa72a55efc18 and https://github.com/core-wg/oscore-groupcomm/commit/92122dc8952d364f69f99b490f7afd5d1d20753f",
          "createdAt": "2021-05-09T09:50:40Z",
          "updatedAt": "2021-05-09T09:50:40Z"
        }
      ]
    },
    {
      "number": 73,
      "id": "MDU6SXNzdWU3OTAwMDA3OTI=",
      "title": "Concerns with EC key joint signature and DH usage",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/73",
      "state": "OPEN",
      "author": "gselander",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Provide better justification for the security of the use of the same public key in pairwise and group modes.\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/core/ujj_I-LlqW9fq__quh-YqKS0fF0/\r\n",
      "createdAt": "2021-01-20T13:57:01Z",
      "updatedAt": "2021-05-09T09:50:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/1fe710c720aab07b50af876d17e9fa72a55efc18 and https://github.com/core-wg/oscore-groupcomm/commit/92122dc8952d364f69f99b490f7afd5d1d20753f",
          "createdAt": "2021-05-09T09:50:45Z",
          "updatedAt": "2021-05-09T09:50:45Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "MDU6SXNzdWU4MzU2NTM1ODg=",
      "title": "Recycling Group IDs by tracking \"Birth GIDs\"",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/75",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-19T07:34:31Z",
      "updatedAt": "2021-03-21T11:39:33Z",
      "closedAt": "2021-03-21T11:39:33Z",
      "comments": []
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWU4MzU2NTg5NDc=",
      "title": "A node terminates its observations upon rejoining",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/76",
      "state": "CLOSED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-19T07:42:17Z",
      "updatedAt": "2021-03-20T19:45:19Z",
      "closedAt": "2021-03-20T19:45:19Z",
      "comments": []
    },
    {
      "number": 78,
      "id": "MDU6SXNzdWU4OTQ5NTg4MTY=",
      "title": "Align with draft-ietf-cose-countersign security considerations",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/78",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "\"When either COSE_Encrypt and COSE_Mac is used and more than two parties share the key, data origin authentication is not provided. Any party that knows the message-authentication key can compute a valid authentication tag; therefore, the contents could originate from any one of the parties that share the key.\r\n\r\nCountersignatures of COSE_Encrypt and COSE_Mac with short authentication tags do not provide the security properties associated with the same algorithm used in COSE_Sign. To provide 128-bit security against collision attacks, the tag length MUST be at least 256-bits. A countersignature of a COSE_Mac with AES-MAC 256/128 provides at most 64 bits of integrity protection. Similarly, a countersignature of a COSE_Encrypt with AES-CCM-16-64-128 provides at most 32 bits bits of integrity protection.\"",
      "createdAt": "2021-05-19T03:43:10Z",
      "updatedAt": "2021-06-28T11:30:54Z",
      "closedAt": "2021-06-28T11:30:54Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/f3d028120357e9ca4bff427793947dd267e7a453",
          "createdAt": "2021-06-28T11:30:54Z",
          "updatedAt": "2021-06-28T11:30:54Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWU4OTQ5NTk5NDc=",
      "title": "Strange use of countersign",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/79",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The common definition of countersignature in the litterature is:\r\n\r\n\"add a signature to (a document already signed by **another** person).\"\r\n\r\n",
      "createdAt": "2021-05-19T03:46:07Z",
      "updatedAt": "2021-06-22T16:27:28Z",
      "closedAt": "2021-06-22T16:27:28Z",
      "comments": []
    },
    {
      "number": 80,
      "id": "MDU6SXNzdWU4OTQ5NjA3Mjk=",
      "title": "Request verification order is undefined.",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/80",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The verification order is currently completely undefined.\r\n\r\nUpdate of repley window must be done after verifing source authentication.",
      "createdAt": "2021-05-19T03:48:02Z",
      "updatedAt": "2021-05-28T10:45:13Z",
      "closedAt": "2021-05-28T10:45:13Z",
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "This seems to already be in the draft \r\n\r\n\"Furthermore, the Replay Window MUST be updated only if both the signature verification and the decryption succeed\"",
          "createdAt": "2021-05-28T10:45:13Z",
          "updatedAt": "2021-05-28T10:45:13Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "MDU6SXNzdWU4OTQ5NjUwNjA=",
      "title": "80-byte source authentication is a big problem",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/81",
      "state": "OPEN",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The current design where the sender \"countersign\" it's own AEAD creates 80-byte source authentication when everything except CCM_8 is used. E.g. AES-CCM, AES-GCM, and ChaCha20-Poly1305.  This make Group OSCORE impossible to use in many situations such as the 75 bytes in some cellular network broadcast (even with CCM_8).\r\n \r\nIt would be very strange to force people wanting to use AES-CCM, AES-GCM, or ChaCha20-Poly1305 or other 16-bit tag algorithms in pair-wise to use 80-byte source authentication, when it can trivially by done with 64 bytes. While the TLS conclusions regarding CCM_8 is misleading, I think there will be a trend toward 128 bit tags. Many deployments for government and financial institutions always use 128 bit tags.\r\n\r\nAnother big disadvantage with the current design is that the user to chose between more useless in the signature mode and less security in pair-wise. In the signature mode, the tag provides no security and you want as small as possible. For pair-wise many application would definitly want to use 16 bytes tags, e.g. application aligning with the CSNA suite.\r\n\r\n8-16 additional bytes overhead for the signature mode makes a big difference. Group OSCORE without the useless AEAD tag could be used, but Group OSCORE with the tag cannot.",
      "createdAt": "2021-05-19T03:59:19Z",
      "updatedAt": "2021-05-19T06:52:13Z",
      "closedAt": null,
      "comments": [
        {
          "author": "cabo",
          "authorAssociation": "MEMBER",
          "body": "I agree with the reasoning above, but have a question anyway:\r\nIs the AEAD authenticator actually \"useless\"?  Doesn't it protect against DoSing the signature verifier?",
          "createdAt": "2021-05-19T06:52:13Z",
          "updatedAt": "2021-05-19T06:52:13Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "MDU6SXNzdWU4OTQ5Njc3NDQ=",
      "title": "Group OSCORE is not secure with the future planned encryption algorithms for the AEAD interface",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/82",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "COSE has discussed and are are planning to standardize new encryption algorithms for the AEAD interface after a request from FIDO. The new algorithms would not provide any integrity protection.\r\n\r\nThe current version of the Group OSCORE draft would not be secure at all with these new algorithms due to the unusual design choice to let the sender countersign it's own AEAD. This could easily be addressed by using a traditional MAC-then-Sign approach.",
      "createdAt": "2021-05-19T04:05:57Z",
      "updatedAt": "2021-06-26T17:30:29Z",
      "closedAt": "2021-06-26T17:30:08Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://github.com/core-wg/oscore-groupcomm/commit/e4b076223354f0904ebbaa370a7d69e1a59ebd55\r\n\r\nAs discussed, now a recipient endpoint owning the latest group keying material does not store the public keys of sender endpoints that are not current group members. This builds on the Group Manager informing of former group members when rekeying the group.\r\n\r\nAs a result, proof of group-membership is always achieved, also for messages protected in group mode when using an encryption algorithm that does not provide integrity protection (i.e., there is no tag providing group authentication).",
          "createdAt": "2021-06-26T17:30:08Z",
          "updatedAt": "2021-06-26T17:30:29Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "MDU6SXNzdWU5MDQxOTY2ODg=",
      "title": "Counter Signature Parameters are not signature parameters.",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/84",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The Counter Signature Parameters are not signature parameters following JOSE, COSE, X.509 terminology. They are part of the public key. The correct thing here is likely to do is to include the public key structure (maybe a CWT, X509, C509) in the external_aad.",
      "createdAt": "2021-05-27T21:15:46Z",
      "updatedAt": "2021-06-22T15:21:12Z",
      "closedAt": "2021-06-22T15:21:12Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/481188b671ecd49dc4b0c6fc082dd1d09b68556e",
          "createdAt": "2021-06-22T15:21:12Z",
          "updatedAt": "2021-06-22T15:21:12Z"
        }
      ]
    },
    {
      "number": 85,
      "id": "MDU6SXNzdWU5MDQ4MjU5ODM=",
      "title": "Group OSCORE should not mandate how things in context are stored",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/85",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "RFC 8613 stays away from such implementation details for very good reasons",
      "createdAt": "2021-05-28T07:13:47Z",
      "updatedAt": "2021-06-22T15:20:32Z",
      "closedAt": "2021-06-22T15:20:32Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/b7b044555f43763e0e32d5fcd2312a4032843420",
          "createdAt": "2021-06-22T15:20:31Z",
          "updatedAt": "2021-06-22T15:20:31Z"
        }
      ]
    },
    {
      "number": 88,
      "id": "MDU6SXNzdWU5MDUxMDE3MTQ=",
      "title": "Deployments using pairwise only should not be forced to implement signatures.",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/88",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Pairwise a very important and useful piece of Group OSCORE. As already stated \"A special deployment of Group OSCORE is to use pairwise mode only\". This make very much sense to have duch deployments. Such deployments should definitly not be forced to implement signatures.",
      "createdAt": "2021-05-28T10:08:22Z",
      "updatedAt": "2021-06-22T15:22:20Z",
      "closedAt": "2021-06-22T15:22:19Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/7a80990154dc7927a9803a6d9e38143cff21dcf1",
          "createdAt": "2021-06-22T15:22:19Z",
          "updatedAt": "2021-06-22T15:22:19Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "MDU6SXNzdWU5MDUxMTAzMjA=",
      "title": "Key formats, Public key algorithms, and integrity protectioin.",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/89",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The draft does not dicuss key formats at all. Typical formats to use would be CWT, X509 and C509. The draft needs to discuss this at least shortly. \r\n\r\nThe public key credential includes the public key algorithm, something that the draft calls signature algorithms.\r\n\r\nThe public key credential should be included in the external_aad, COSE does not do this automatically for you.",
      "createdAt": "2021-05-28T10:14:08Z",
      "updatedAt": "2021-06-22T15:23:27Z",
      "closedAt": "2021-06-22T15:23:26Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/b7b044555f43763e0e32d5fcd2312a4032843420   and   https://github.com/core-wg/oscore-groupcomm/commit/481188b671ecd49dc4b0c6fc082dd1d09b68556e",
          "createdAt": "2021-06-22T15:23:26Z",
          "updatedAt": "2021-06-22T15:23:26Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "MDU6SXNzdWU5MDUxMjExNzA=",
      "title": "Secret Derivation Algorithm",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/90",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The name is a bit strange. According to COSE this is a Key Agreement Algorithm. I suggest changing to \"Pairwise Key Agreement Algorithm\".\r\n\r\nIf the signature algorithms is protected in the external_aad, this algorithm should as well.\r\n\r\nThe key derivation in the Key Agreeent algorithm may not be HKDF. The key derivation included in the key agreement algorithm is used to derive the shared secret, it should not be used to derive the sender keys. The RFC 8613 HKDF Algorithm should be used in the derivation below.\r\n\r\nPairwise Sender Key    = HKDF(Sender Key, Shared Secret, info, L)\r\n\r\n\r\n",
      "createdAt": "2021-05-28T10:21:23Z",
      "updatedAt": "2021-06-22T15:19:52Z",
      "closedAt": "2021-06-22T15:19:52Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in https://github.com/core-wg/oscore-groupcomm/commit/b7b044555f43763e0e32d5fcd2312a4032843420   and   https://github.com/core-wg/oscore-groupcomm/commit/481188b671ecd49dc4b0c6fc082dd1d09b68556e",
          "createdAt": "2021-06-22T15:19:52Z",
          "updatedAt": "2021-06-22T15:19:52Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "MDU6SXNzdWU5MDUxMjI2NzM=",
      "title": "When EdDSA are used for both signatues and pairwise, it should be forbidden to use them in other protocols",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/91",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Using them in other protocols might not be safe",
      "createdAt": "2021-05-28T10:22:20Z",
      "updatedAt": "2021-06-22T15:18:15Z",
      "closedAt": "2021-06-22T15:18:15Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in the \"Pairwise Keys\" section, see commit https://github.com/core-wg/oscore-groupcomm/commit/b7b044555f43763e0e32d5fcd2312a4032843420",
          "createdAt": "2021-06-22T15:18:15Z",
          "updatedAt": "2021-06-22T15:18:15Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU5MDczOTEwNzc=",
      "title": "No Verification of Signatures in Group Mode",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/92",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "\"For instance, a command to turn a bulb on where the bulb is\r\n   already on does not need the signature to be checked.  In such\r\n   situations, the counter signature needs to be included anyway as part\r\n   of a message protected with the group mode, so that an endpoint that\r\n   needs to validate the signature for any reason has the ability to do\r\n   so.\"\r\n\r\nI don't think this works at all. Assuming a client sends a request to \"lock\" an open lock, and another group member change it to \"unlock\". The server answers the client with a \"200 OK\" stating that it is \"locked\". Also in the example above, the replay window would not be updated, which likely cause a lot of additional problems.\r\n\r\nThe kind of \"hack\" described above seems far worse than just having a group request mode without source authentication. The client always need to know what the server will do cryptographically.\r\n\r\n",
      "createdAt": "2021-05-31T11:38:46Z",
      "updatedAt": "2021-06-22T15:16:48Z",
      "closedAt": "2021-06-22T15:16:48Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in the commit https://github.com/core-wg/oscore-groupcomm/commit/1b559a0d4fbc99b1e30f1c3c31209419f986ace9",
          "createdAt": "2021-06-22T15:16:48Z",
          "updatedAt": "2021-06-22T15:16:48Z"
        }
      ]
    },
    {
      "number": 94,
      "id": "MDU6SXNzdWU5MDkzNDUwMTk=",
      "title": "Privacy and tracking",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/94",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The current -11 design allows an attacker to link messages from different groups as long as the public key is the same (which it likely will be). I think group oscore should probably fulfill something like \r\n\r\n- Group privacy (an attacker that is not a member of both groups should not be able to link messages between groups)\r\n\r\nI think that can be done by signing a HMAC that is not sent on the wire (at least that stops the trivial attack), or by encrypting the signature. (a signature verifying proxy would have to be a limited group member that can verify but not decrypt)",
      "createdAt": "2021-06-02T10:22:19Z",
      "updatedAt": "2021-06-25T08:44:20Z",
      "closedAt": "2021-06-25T08:44:20Z",
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed, now addressed by encrypting the counter signature, see https://github.com/core-wg/oscore-groupcomm/commit/0b74642065c166019c311b7114dde4824ac6b5a1",
          "createdAt": "2021-06-25T08:44:20Z",
          "updatedAt": "2021-06-25T08:44:20Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "MDU6SXNzdWU5NTY3NzY2NDY=",
      "title": "Clarify derivation of Group Encryption Key",
      "url": "https://github.com/core-wg/oscore-groupcomm/issues/96",
      "state": "OPEN",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In Section 2.1.6 \"Group Encryption Key\", explicitly mention that the 'id' element of the 'info' array is the empty byte string.\r\n\r\nThis is consistent with the derivation of the Common IV inherited from https://datatracker.ietf.org/doc/html/rfc8613#section-3.2.1",
      "createdAt": "2021-07-30T14:04:49Z",
      "updatedAt": "2021-07-30T14:04:49Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MjE5OTkwMDUx",
      "title": "Move signature to Payload and Compression updates",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/1",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- Move signature to Payload: Having the signature in the option is bad for two reasons: I makes fragmentation far worse, and it means that the recipient need to look up the signature length, just to parse the OSCORE option. For these reasons the signature belongs in the payload.\r\n\r\n- The Group OSCORE spec seem to have been written from an old version of the OSCORE draft and never updated. I updated the compression section with subsections and added the note of IANA. Someone should probably go through the draft and align it with draft-ietf-core-object-security-15\r\n",
      "createdAt": "2018-10-03T10:40:25Z",
      "updatedAt": "2018-10-11T16:19:58Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "1aa6a22e24fe4efd3edb7abc8232e2557abfe309",
      "headRepository": "emanjon/oscore-groupcomm",
      "headRefName": "patch-1",
      "headRefOid": "ca3bc0853d0ae1975a324a5be1e75a3826d315d4",
      "closedAt": "2018-10-11T16:19:58Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "fpalombini",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks John, your text was included in 81b31aa9393 . More updates are coming.",
          "createdAt": "2018-10-11T16:19:58Z",
          "updatedAt": "2018-10-11T16:19:58Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0OTM4Njg4",
      "title": "V 03 wip",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/3",
      "state": "MERGED",
      "author": "fpalombini",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "v-03",
      "createdAt": "2018-10-23T08:16:11Z",
      "updatedAt": "2018-10-23T08:18:25Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "1aa6a22e24fe4efd3edb7abc8232e2557abfe309",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-03-WIP",
      "headRefOid": "cdbcddb05bb5a583326723e69ab7f5984e4a05bf",
      "closedAt": "2018-10-23T08:18:22Z",
      "mergedAt": "2018-10-23T08:18:22Z",
      "mergedBy": "fpalombini",
      "mergeCommit": {
        "oid": "416bdefceb5f5cc3ab5ca9e5171642114ef9cc7e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjU4ODIzMjAw",
      "title": "V 04 wip",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/5",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-03-06T18:02:24Z",
      "updatedAt": "2019-04-03T09:51:10Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "416bdefceb5f5cc3ab5ca9e5171642114ef9cc7e",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-04-WIP",
      "headRefOid": "42d5e947e19ade39f77e6d3a839827921bde701b",
      "closedAt": "2019-04-03T09:51:03Z",
      "mergedAt": "2019-04-03T09:51:03Z",
      "mergedBy": "fpalombini",
      "mergeCommit": {
        "oid": "99c048dfbdc687842c37ce991b35e4f3d3816a09"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0Njc5ODk0",
      "title": "V 05 wip",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/9",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-04T20:37:56Z",
      "updatedAt": "2019-07-10T08:31:57Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "99c048dfbdc687842c37ce991b35e4f3d3816a09",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-05-WIP",
      "headRefOid": "553252ffea8655588f1d158825b450957b66f504",
      "closedAt": "2019-07-10T08:31:53Z",
      "mergedAt": "2019-07-10T08:31:53Z",
      "mergedBy": "fpalombini",
      "mergeCommit": {
        "oid": "c131791d8d32ef7dcbfd6c1308a1ced25d426d3d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0MzEyODAzNTk0",
      "title": "Wip 06",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/12",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-08-30T16:14:26Z",
      "updatedAt": "2019-11-08T23:37:41Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "c131791d8d32ef7dcbfd6c1308a1ced25d426d3d",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "wip-06",
      "headRefOid": "0e93b41a17658f3f252b80161077fc65a5431205",
      "closedAt": "2019-11-08T23:35:49Z",
      "mergedAt": "2019-11-08T23:35:49Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "0e93b41a17658f3f252b80161077fc65a5431205"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 25,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU1NjA3NjM3",
      "title": "Optimized mode and some editorial changes to intro and compression se\u2026",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/25",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "\u2026ction\r\n\r\n-\tThe abstract felt old. I replaced it with text from the introduction.\r\n-\tI-D.dijk-core-groupcomm-bis is already a normative reference, which obsoletes RFC7390. Referencing to RFC7390 does formally not make much sense (unless you want to discuss something historically).\r\n-\tMost of header compression was just respecification of RFC 8613.\r\n-\tImplements the suggestion of an optimized mode as suggested in Issue #13",
      "createdAt": "2019-12-20T08:22:46Z",
      "updatedAt": "2020-02-06T15:25:12Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "0e93b41a17658f3f252b80161077fc65a5431205",
      "headRepository": "emanjon/oscore-groupcomm",
      "headRefName": "patch-2",
      "headRefOid": "c866aa51cf64f74b987be98cc9ac74ceed5a9506",
      "closedAt": "2020-02-06T15:25:12Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Integrated in v-07.",
          "createdAt": "2020-02-06T15:25:11Z",
          "updatedAt": "2020-02-06T15:25:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 27,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzAwMTI2",
      "title": "V 07",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/27",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-10T18:36:34Z",
      "updatedAt": "2020-03-25T17:26:01Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "0e93b41a17658f3f252b80161077fc65a5431205",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-07",
      "headRefOid": "b9a37128b75263263b936867436c9bee2ebef650",
      "closedAt": "2020-03-10T18:36:55Z",
      "mergedAt": "2020-03-10T18:36:55Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "1a3d2ad03ba2b34909055d5f5ec3164e1047dfd6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzI3NzM0",
      "title": "V 08",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/28",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-06T15:31:09Z",
      "updatedAt": "2020-04-06T21:01:23Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "1a3d2ad03ba2b34909055d5f5ec3164e1047dfd6",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-08",
      "headRefOid": "d71d4846f0e3d9f51524d3dac9838dad8738adc1",
      "closedAt": "2020-04-06T15:31:56Z",
      "mergedAt": "2020-04-06T15:31:56Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "313ed806a892249cfd30bb70b37e8e73d12c8823"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 50,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE1MjYwNDUz",
      "title": "Rephrasing of sections 1-3",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/50",
      "state": "MERGED",
      "author": "gselander",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Proposed text rewrite, please check",
      "createdAt": "2020-05-08T14:22:56Z",
      "updatedAt": "2020-05-11T10:39:16Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "v-09",
      "baseRefOid": "10949ba9b13b4cf814371c635abe4dfeec7f9116",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-09-GS",
      "headRefOid": "5182542bcd7857bd3e8481efecadc2bc17480c4d",
      "closedAt": "2020-05-08T18:51:36Z",
      "mergedAt": "2020-05-08T18:51:36Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "f2e589601cb7bab3dc0507fefe333d14f73fb57c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 51,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM4Mzg0MjM4",
      "title": "V 09",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/51",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-06-23T07:45:38Z",
      "updatedAt": "2020-10-11T07:54:41Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "313ed806a892249cfd30bb70b37e8e73d12c8823",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-09",
      "headRefOid": "061187cb04e305096db90b651ab387f63d3a79fb",
      "closedAt": "2020-06-23T07:46:04Z",
      "mergedAt": "2020-06-23T07:46:04Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "4c2362eeb92f3f963f304e4cdcc10051ed09458f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 52,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIzMjAxNDIy",
      "title": "V 10",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/52",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-18T13:52:49Z",
      "updatedAt": "2020-11-18T13:57:29Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "4c2362eeb92f3f963f304e4cdcc10051ed09458f",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-10",
      "headRefOid": "cca8b2f0cd0ca558b4887cf3930517df252277fd",
      "closedAt": "2020-11-18T13:53:00Z",
      "mergedAt": "2020-11-18T13:53:00Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "62ac46833649958e07612db7574297aa4f240411"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 74,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc5MDk0NDYz",
      "title": "V 11",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/74",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-24T08:07:12Z",
      "updatedAt": "2021-02-24T08:08:33Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "62ac46833649958e07612db7574297aa4f240411",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-11",
      "headRefOid": "17b9f84ff8edb8c8c9256c778474244771b3d6ab",
      "closedAt": "2021-02-24T08:07:22Z",
      "mergedAt": "2021-02-24T08:07:22Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "df97ef75050917fa40b6527e5c0a4f154494672e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 77,
      "id": "MDExOlB1bGxSZXF1ZXN0NjE2NzI0MTQ5",
      "title": "Security of pairwise keys",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/77",
      "state": "MERGED",
      "author": "gselander",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-04-16T10:28:46Z",
      "updatedAt": "2021-07-14T13:53:44Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "v-12",
      "baseRefOid": "3dac7fa717e116abb4724e807fe03bb071eecbd2",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "gselander-patch-1",
      "headRefOid": "e12b3b609ae00a14b846b9f3d132245c577e43aa",
      "closedAt": "2021-05-09T08:41:28Z",
      "mergedAt": "2021-05-09T08:41:28Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "1fe710c720aab07b50af876d17e9fa72a55efc18"
      },
      "comments": [
        {
          "author": "gselander",
          "authorAssociation": "COLLABORATOR",
          "body": "@marco-tiloca-sics Good point about being more explicit. I actually think is valuable to reference an existing encoding of public keys providing also key type and curve, like CRED_X in https://datatracker.ietf.org/doc/html/draft-ietf-lake-edhoc-05#section-3.3.3.\r\n\r\nAlso, there is a discussion about format for public keys in COSE, which if it is specified probably will be referenced by EDHOC instead of CRED_X. I would be good if there is a common format used in all these instances. For the time being I propose that we reference CRED_X with empty text string subject name, and keep track of the COSE activity.",
          "createdAt": "2021-04-29T09:38:12Z",
          "updatedAt": "2021-04-29T09:38:12Z"
        },
        {
          "author": "gselander",
          "authorAssociation": "COLLABORATOR",
          "body": "We should consider replace the NIST reference with SECG [1] to harmonize with EDHOC [2].\r\n\r\n[1] https://www.secg.org/sec1-v2.pdf\r\n[2] https://github.com/lake-wg/edhoc/issues/107\r\n\r\n(edit) ... but the commits in [3] mainly refers to the NIST spec. so I propose we keep it as is for the time being.\r\n\r\n[2] https://github.com/lake-wg/edhoc/issues/108\r\n",
          "createdAt": "2021-04-29T09:43:10Z",
          "updatedAt": "2021-04-30T12:53:56Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM4OTY1OTc1",
          "commit": {
            "abbreviatedOid": "05256c4"
          },
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "It looks good to me; we can give more details on one point.\r\n\r\nFor the two HKDF invocations in Section 2.3.1, we can define more explicitly how the public keys are expressed when concatenated to form IKM-Sender and IKM-Recipient.\r\n\r\nGiven a public key, that can simply be:\r\n\r\n* For OKP signature keys, the compressed 'x' coordinate, i.e. what would be expressed in the key parameter -2 of a corresponding COSE Key.\r\n\r\n* For EC2 signature keys, the 'x' coordinate followed by the 'y' coordinate in this order, i.e. what would be expressed in the key parameters -2 and -3 of a corresponding COSE Key.\r\n\r\nThis should be sufficient, i.e. it shouldn't be needed to have a more structured encoding of public keys providing also key type and curve, e.g. like done for CRED_X in https://datatracker.ietf.org/doc/html/draft-ietf-lake-edhoc-05#section-3.3.3",
          "createdAt": "2021-04-19T14:52:47Z",
          "updatedAt": "2021-04-19T14:52:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 83,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU1MzU4NzMx",
      "title": "1. Introduction (and Abstract)",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/83",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- Abstract and the beginning of the intro seems to have been written before pairwise. Pairwise a very important and useful piece of Group OSCORE.\r\n\r\n- \"pairwise mode, two group members exchange Group OSCORE requests\"\r\nThis does not align witf the terminology that group request are sent to all members.\r\n\r\n- \"A special deployment of Group OSCORE is to use pairwise mode only\"\r\n  \"This mode is defined in Section 8 and MUST be supported.\"\r\nPairwise only is is a very valid use case. Deployments using pairwise only should not be forced to implement signatures.\r\n\r\n- \"supports all COSE algorithms\"\r\nOnly signature algorithms.",
      "createdAt": "2021-05-27T21:07:36Z",
      "updatedAt": "2021-06-22T08:20:56Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "df97ef75050917fa40b6527e5c0a4f154494672e",
      "headRepository": "emanjon/oscore-groupcomm",
      "headRefName": "patch-3",
      "headRefOid": "d5abbe6ed39012230ebdde08827dc7d6fbd0ec29",
      "closedAt": "2021-06-22T08:20:56Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Manually addressed in branch \"v-12\", see commit https://github.com/core-wg/oscore-groupcomm/commit/7a80990154dc7927a9803a6d9e38143cff21dcf1",
          "createdAt": "2021-06-22T08:20:55Z",
          "updatedAt": "2021-06-22T08:20:55Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 86,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU1OTUxNjc5",
      "title": "2. Security Context",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/86",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-28T07:15:12Z",
      "updatedAt": "2021-06-22T10:08:02Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "df97ef75050917fa40b6527e5c0a4f154494672e",
      "headRepository": "emanjon/oscore-groupcomm",
      "headRefName": "patch-4",
      "headRefOid": "97ab1616b1995a9e7ef202ef22b8b603101b9deb",
      "closedAt": "2021-06-22T10:08:01Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "-The signature parameters are not signature parametes, they are part of the public key algorithm. The format of the public key algorithm depends on the types of credentials used, with CWT it is a COSE key type and Key Parameters, in X.509 it is a SubjectPublicKeyInfoAlgorithm. The public key algorith would typically be stored with the keys.\r\n\r\n-The use of AEAD with signatures and without signatures are two completely different use cases with completely different security properties. It does not make sense to have a signle AEAD algorithm here as it increases source authentication with up to 16 bytes.\r\n\r\n-Pairwise only deployments should not be forced to implement signatures.\r\n\r\n-\"Secret Derivation Algorithm MUST take value from the \"Value\" column of the \"COSE Algorithms\" Registry {{COSE.Algorithms}}\" It makes no sense to mandate how the context in implemented in detail.\r\n\r\n-When EdDSA are used for both signatues and pairwise, it should be forbidden to use them in other protocols.\r\n\r\n- I don't understand this parameter obsession. It is extremely long and makes the whole specification and protocol feel extremly complicated. Frankly, I don't see much use at all.",
          "createdAt": "2021-05-28T07:24:30Z",
          "updatedAt": "2021-05-28T07:24:30Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "The name Secret Derivation Algorithm  is a bit strange. According to COSE this is a Key Agreement Algorithm. I suggest changing to \"Pairwise Key Agreement Algorithm\".\r\nIf the signature algorithms is protected in the external_aad, this algorithm should as well.\r\nThe key derivation in the Key Agreeent algorithm may not be HKDF. The key derivation included in the key agreement algorithm is used to derive the shared secret, it should not be used to derive the sender keys. The RFC 8613 HKDF Algorithm should be used in the derivation below.\r\nPairwise Sender Key = HKDF(Sender Key, Shared Secret, info, L)\r\n",
          "createdAt": "2021-05-28T10:36:42Z",
          "updatedAt": "2021-05-28T10:37:01Z"
        },
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "The draft does not dicuss key formats at all. Typical formats to use would be CWT, X509 and C509. The draft needs to discuss this at least shortly.\r\nThe public key credential includes the public key algorithm, something that the draft calls signature algorithms.\r\nThe public key credential should be included in the external_aad, COSE does not do this automatically for you.\r\n",
          "createdAt": "2021-05-28T10:37:09Z",
          "updatedAt": "2021-05-28T10:37:09Z"
        },
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Manually addressed in branch \"v-12\", see commit https://github.com/core-wg/oscore-groupcomm/commit/b7b044555f43763e0e32d5fcd2312a4032843420",
          "createdAt": "2021-06-22T10:08:01Z",
          "updatedAt": "2021-06-22T10:08:01Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 87,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU2MDIwNzkw",
      "title": "4. The COSE Object",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/87",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-05-28T08:04:14Z",
      "updatedAt": "2021-06-22T10:50:27Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "df97ef75050917fa40b6527e5c0a4f154494672e",
      "headRepository": "emanjon/oscore-groupcomm",
      "headRefName": "patch-5",
      "headRefOid": "1a1af992d7acfc3fe3a39eafd532add23feba16d",
      "closedAt": "2021-06-22T10:50:26Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "MEMBER",
          "body": "- Even if CounterSignature is used, the algorithm is a signature algorithm, and not a counter signature algorithm. \r\n\r\n- Not sure if all algorithms need to be protected, but if the signature algorithm is protected, the pairwise kdf alg should also be protected.\r\n\r\n- The sender's public key needs to be integrity protected, COSE does not do that for you.\r\n",
          "createdAt": "2021-05-28T08:08:57Z",
          "updatedAt": "2021-05-28T08:08:57Z"
        },
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Manually addressed in branch \"v-12\", see commit https://github.com/core-wg/oscore-groupcomm/commit/481188b671ecd49dc4b0c6fc082dd1d09b68556e",
          "createdAt": "2021-06-22T10:50:26Z",
          "updatedAt": "2021-06-22T10:50:26Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 93,
      "id": "MDExOlB1bGxSZXF1ZXN0NjU4MjUzMzQ4",
      "title": "Appendix F, G, H",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/93",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I suggest to just remove these 3 appendixes. Appendix F seems completely insecure. Appendix G and H discusses things related to the key which might be in CWT, X.509, or C509 format. Providing integrity protection of the key parameters is easily done by adding the public key credential to the external_aad which should probably be done for other reasons.",
      "createdAt": "2021-05-31T11:51:17Z",
      "updatedAt": "2021-06-22T07:57:33Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "df97ef75050917fa40b6527e5c0a4f154494672e",
      "headRepository": "emanjon/oscore-groupcomm",
      "headRefName": "patch-6",
      "headRefOid": "b665adc4f70aaa0a7af1331659d1a834b954489a",
      "closedAt": "2021-06-22T07:57:33Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "marco-tiloca-sics",
          "authorAssociation": "COLLABORATOR",
          "body": "Manually addressed in branch \"v-12\", see commit https://github.com/core-wg/oscore-groupcomm/commit/1b559a0d4fbc99b1e30f1c3c31209419f986ace9",
          "createdAt": "2021-06-22T07:57:33Z",
          "updatedAt": "2021-06-22T07:57:33Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 95,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg5OTM1NzY2",
      "title": "V 12",
      "url": "https://github.com/core-wg/oscore-groupcomm/pull/95",
      "state": "MERGED",
      "author": "marco-tiloca-sics",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-14T13:53:58Z",
      "updatedAt": "2021-07-14T13:56:33Z",
      "baseRepository": "core-wg/oscore-groupcomm",
      "baseRefName": "master",
      "baseRefOid": "df97ef75050917fa40b6527e5c0a4f154494672e",
      "headRepository": "core-wg/oscore-groupcomm",
      "headRefName": "v-12",
      "headRefOid": "70d371fffef97a5eec5a799547aa9b32be517a96",
      "closedAt": "2021-07-14T13:54:51Z",
      "mergedAt": "2021-07-14T13:54:51Z",
      "mergedBy": "marco-tiloca-sics",
      "mergeCommit": {
        "oid": "696f599c4d266fe9a3bd18f7bdcc25f9212fddb1"
      },
      "comments": [],
      "reviews": []
    }
  ]
}